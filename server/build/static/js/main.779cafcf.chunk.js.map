{"version":3,"sources":["redux/types/types.js","redux/actions/userAction.js","Components/Home.js","Components/Navbar.js","redux/actions/todosAction.js","Components/Todo.js","Components/TodoList.js","Components/TodoForm.js","redux/actions/notesAction.js","Components/NoteForm.js","Components/Note.js","Components/NoteTable.js","App.js","reportWebVitals.js","redux/reducers/userReducer.js","redux/reducers/todosReducer.js","redux/reducers/notesReducer .js","redux/reducers/rootReducer.js","redux/initState.js","redux/store.js","index.js"],"names":["CHECK_USER_SESSION","VERIFY_USER","LOGOUT_USER","SET_TODOS","ADD_TODO","CHANGE_TODO","REMOVE_TODO","SET_NOTES","ADD_NOTE","CHANGE_NOTE","REMOVE_NOTE","checkUserSession","dispatch","fetch","then","res","status","json","data","type","TYPES","checkUser","Home","className","href","role","Navbar","user","history","useHistory","useDispatch","logoutHandler","a","push","src","img","alt","login","to","onClick","setTodos","addTodo","createTodo","text","id","method","headers","body","JSON","stringify","Todo","todo","useSelector","state","styleDone","fill","transition","styleNotYetDone","style","isDone","borderColor","textDecoration","patchTodo","_id","viewBox","width","d","deleteTodo","height","TodoLits","todos","useEffect","length","map","TodoForm","handlerSubmit","event","preventDefault","target","value","trim","onSubmit","name","placeholder","setNotes","addNote","createNote","changeNote","patchNote","note","isUpdating","NoteForm","Note","handlerSave","handlerDelete","deleteNote","onChange","e","input","enable-background","NoteTable","notes","App","exact","path","TodoList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","userReducer","action","todosReducer","filter","notesReducer","rootReducer","combineReducers","initState","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.779cafcf.chunk.js","sourcesContent":["const CHECK_USER_SESSION = 'CHECK_USER_SESSION'\nconst VERIFY_USER = 'VERIFY_USER'\nconst LOGOUT_USER = 'LOGOUT_USER'\nconst SET_TODOS = 'SET_TODOS'\nconst ADD_TODO = 'ADD_TODO'\nconst CHANGE_TODO = 'CHANGE_TODO'\nconst REMOVE_TODO = 'REMOVE_TODO'\nconst SET_NOTES = 'SET_NOTES'\nconst ADD_NOTE = 'ADD_NOTE'\nconst CHANGE_NOTE = 'CHANGE_NOTE'\nconst REMOVE_NOTE = 'REMOVE_NOTE'\n\nexport { \n  CHECK_USER_SESSION, \n  VERIFY_USER, \n  LOGOUT_USER,\n  SET_TODOS,\n  ADD_TODO,\n  CHANGE_TODO,\n  REMOVE_TODO,\n  SET_NOTES,\n  ADD_NOTE,\n  CHANGE_NOTE,\n  REMOVE_NOTE,\n}\n","import * as TYPES from '../types/types';\n\n//====================session========================\nfunction checkUser(data) {\n  return {\n    type: TYPES.CHECK_USER_SESSION,\n    data,\n  }\n}\n\nconst checkUserSession = () => (dispatch) => {\n    fetch(`/login`)\n    .then(res => res.status === 200 ? res.json() : null)\n    .then(data => {\n      dispatch(checkUser(data));\n    })\n}\n\n// //===================login=========================\n\nfunction signInUser(data = {}) {\n  return {\n    type: TYPES.VERIFY_USER,\n    data,\n  }\n}\n\n//==============google auth==============\n\nconst loginUserByGoogle = () => async (dispatch) => {\n  const res = await fetch(`/google`)\n  if(res.status === 200) {\n    const data = await res.json()\n    dispatch(signInUser(data))\n  } else {\n    dispatch(signInUser())\n  }\n}\n//========================logout====================\n\nconst logoutUser = () => async (dispatch) => {\n  const res = await fetch(`/logout`)\n  if (res.status === 200) dispatch(removeUser())\n}\n\nfunction removeUser() {\n  return {\n    type: TYPES.VERIFY_USER,\n    data: null\n  }\n}\n\n//===============================\n\n\nexport {\n  checkUser,\n  checkUserSession,\n  logoutUser,\n  removeUser,\n  loginUserByGoogle,\n  signInUser,\n}\n","import GoogleButton from 'react-google-button'\n\nimport '../css/Home.css'\n\nfunction Home() {\n\n  return (\n    <div className='home'>\n      <h3>\n      Wellcome to Todos & Notes app!\n      </h3>\n      <a className='googleButton' href=\"https://todos-and-notes-app-server.herokuapp.com/google\" role=\"button\">\n        <GoogleButton/>\n      </a>\n    </div>\n  )\n}\n\nexport default Home;\n","import { useHistory, Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from '../redux/actions/userAction';\n\nimport '../css/Navbar.css'\n\nfunction Navbar({ user }) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const logoutHandler = async () => {\n    await dispatch(logoutUser())\n    history.push('/');\n  }\n  \n  return (\n    user ? \n    <nav className='navbar'>\n      <div className='navLinks'>\n      <h3 className='navGreet'>Todos &<br/> Notes app</h3>\n    <div className='user'>\n      <img src={user.img} className='userImg' alt='userImg'/>\n      <p><strong>{user.login}</strong></p>\n    </div>\n    <Link to='/todos'>My Todos</Link>\n    <Link to='/notes'>My Notes</Link>\n    <Link onClick={ logoutHandler } to='/'>Logout</Link>\n      </div>\n  </nav> \n  : null\n  )\n}\n\nexport default Navbar;\n","import * as TYPES from '../types/types';\n\n//============================================\nfunction setTodos(data) {\n  return {\n    type: TYPES.SET_TODOS,\n    data,\n  }\n}\n\nconst getTodos = () => async (dispatch) => {\n  const res = await fetch(`/todos`)\n  if (res.status === 200) {\n    const data = await res.json()\n    dispatch(setTodos(data))\n  }\n}\n\nfunction addTodo(data) {\n  return {\n    type: TYPES.ADD_TODO,\n    data,\n  }\n}\n\nconst createTodo = (text, id) => async (dispatch) => {\n  const res = await fetch(`/todos/${id}/addtodo`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        text,\n      })\n    }\n  )\n\n  if (res.status === 200) {\n    const data = await res.json()\n    dispatch(addTodo(data))\n  }\n}\n\nfunction changeTodo(data) {\n  return {\n    type: TYPES.CHANGE_TODO,\n    data,\n  }\n}\n\nfunction removeTodo(data) {\n  return {\n    type: TYPES.REMOVE_TODO,\n    data,\n  }\n}\n\nconst deleteTodo = (todo, id) => async (dispatch) => {\n  const res = await fetch(`/todos/${id}/deletetodo`,\n    {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: todo._id\n      })\n    }\n  )\n\n  if (res.status === 200) dispatch(removeTodo(todo))\n}\n\nconst patchTodo = (todo, id) => async (dispatch) => {\n  const res = await fetch(`/todos/${id}/patchtodo`,\n    {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        todo\n      })\n    }\n  )\n  if (res.status === 200) dispatch(changeTodo(todo))\n}\n\nexport {\n  setTodos,\n  getTodos,\n  createTodo,\n  addTodo,\n  changeTodo,\n  deleteTodo,\n  removeTodo,\n  patchTodo,\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { patchTodo, deleteTodo } from '../redux/actions/todosAction';\n\n\nfunction Todo({ todo }) {\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  const styleDone = { fill: 'green', transition: '0.3s' };\n  const styleNotYetDone = { fill: 'gray', transition: '0.3s' };\n  const todoDone = { borderColor: 'green', textDecoration: 'line-through' }\n  const todoNotYetDone = { borderColor: 'gray' }\n\n  const handlerClick = () => {\n    dispatch(patchTodo({ ...todo, isDone: !todo.isDone }, user._id))\n  };\n\n  const handlerDelete = () => {\n    dispatch(deleteTodo(todo, user._id))\n  };\n\n  return (\n    <div className='todo' style={todo.isDone ? todoDone : todoNotYetDone}>\n      <span>{todo.text}</span>\n      <div className='todoButtons'>\n        <button className='doneButton'>\n          <svg className='icon' onClick={handlerClick} style={todo.isDone ? styleDone : styleNotYetDone}\n            viewBox='0 0 27.855 27.855' width='30px' >\n            <g>\n              <path d='M27.604,6.751L14.176,20.18c-0.338,0.336-0.885,0.336-1.223,0l-0.27-0.27l0,0l-0.293-0.293l-1.268-1.268l-0.018-0.027\n\t\tL5.297,12.47c-0.336-0.336-0.336-0.885,0-1.221l1.83-1.828c0.338-0.339,0.883-0.339,1.221,0l5.223,5.262L24.551,3.7\n\t\tc0.338-0.337,0.885-0.337,1.221,0l1.832,1.832C27.939,5.867,27.939,6.415,27.604,6.751z'/>\n              <path d='M21.795,22.613c0,0.973-0.793,1.766-1.768,1.766H3.535c-0.975,0-1.768-0.793-1.768-1.766V5.241\n\t\tc0-0.973,0.793-1.766,1.768-1.766h16.492c0.975,0,1.768,0.793,1.768,1.766l0,0l1.256-1.162c0.203-1.43-1.242-2.369-3.024-2.369\n\t\tH3.535C1.582,1.71,0,3.29,0,5.241v17.372c0,1.951,1.582,3.533,3.535,3.533h16.492c1.953,0,3.535-1.582,3.535-3.533V12.257\n\t\tl-1.768,1.924L21.795,22.613L21.795,22.613z'/>\n            </g>\n          </svg>\n        </button>\n        <button className='deleteButton' onClick={handlerDelete}>\n          <svg className='icon' viewBox='0 0 512 512' width='30px' height='30px' style={todo.isDone ? styleDone : styleNotYetDone} >\n            <g>\n              <path d='m424 64h-88v-16c0-26.467-21.533-48-48-48h-64c-26.467 0-48 21.533-48 48v16h-88c-22.056 0-40 17.944-40 40v56c0 8.836 7.164 16 16 16h8.744l13.823 290.283c1.221 25.636 22.281 45.717 47.945 45.717h242.976c25.665 0 46.725-20.081 47.945-45.717l13.823-290.283h8.744c8.836 0 16-7.164 16-16v-56c0-22.056-17.944-40-40-40zm-216-16c0-8.822 7.178-16 16-16h64c8.822 0 16 7.178 16 16v16h-96zm-128 56c0-4.411 3.589-8 8-8h336c4.411 0 8 3.589 8 8v40c-4.931 0-331.567 0-352 0zm313.469 360.761c-.407 8.545-7.427 15.239-15.981 15.239h-242.976c-8.555 0-15.575-6.694-15.981-15.239l-13.751-288.761h302.44z' />\n              <path d='m256 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z' /><path d='m336 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z' />\n              <path d='m176 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z' />\n            </g>\n          </svg>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Todo;\n","import Todo from './Todo';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos } from '../redux/actions/todosAction';\n\nimport '../css/Todos.css'\n\nfunction TodoLits() {\n\n  const dispatch = useDispatch();\n\n  const todos = useSelector(state => state.todos);\n\n  useEffect(() => {\n    dispatch(getTodos())\n  }, [dispatch])\n\n\n  return (\n    <>\n      {\n        todos.length ? todos.map((todo) =>\n        (\n          <Todo\n            todo={todo}\n          key={todo._id}\n          />\n        )) :\n          <p>\n            You have no tasks yet!<br />To plan your new task just fill and submit Todo form.\n          </p>\n      }\n    </>\n  )\n}\n\nexport default TodoLits;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { createTodo } from '../redux/actions/todosAction';\n\nfunction TodoForm() {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  const handlerSubmit = async (event) => {\n    event.preventDefault();\n    const text = event.target.text.value;\n    if (text.trim()) {\n      await dispatch(createTodo(text, user._id));\n      event.target.text.value = '';\n    }\n  };\n\n  return (\n      <form onSubmit={handlerSubmit} className='todoForm'>\n          <h3>Todo Form</h3>\n          <textarea type='text' className='todoInput' name='text' placeholder='Your Todo text here' />\n          <button type='submit' className='addButton'>Add Todo</button>\n      </form>\n  )\n}\n\nexport default TodoForm;\n","import * as TYPES from '../types/types';\n\n//============================================\nfunction setNotes(data) {\n  return {\n    type: TYPES.SET_NOTES,\n    data,\n  }\n}\n\nconst getNotes = () => async (dispatch) => {\n  const res = await fetch(`/notes`)\n  if (res.status === 200) {\n    const data = await res.json()\n    dispatch(setNotes(data))\n  }\n}\n\nfunction addNote(data) {\n  return {\n    type: TYPES.ADD_NOTE,\n    data,\n  }\n}\n\nconst createNote = (text, id) => async (dispatch) => {\n  const res = await fetch(`/notes/${id}/addnote`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        text,\n      })\n    }\n  )\n\n  if (res.status === 200) {\n    const data = await res.json()\n    dispatch(addNote(data))\n  }\n}\n\nfunction changeNote(data) {\n  return {\n    type: TYPES.CHANGE_NOTE,\n    data,\n  }\n}\n\nfunction removeNote(data) {\n  return {\n    type: TYPES.REMOVE_NOTE,\n    data,\n  }\n}\n\nconst deleteNote = (note, id) => async (dispatch) => {\n  const res = await fetch(`/notes/${id}/deletenote`,\n    {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: note._id\n      })\n    }\n  )\n\n  if (res.status === 200) dispatch(removeNote(note))\n}\n\nconst patchNote = (note, id) => async (dispatch) => {\n  const res = await fetch(`/notes/${id}/patchNote`,\n    {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        note\n      })\n    }\n  )\n  if (res.status === 200) dispatch(changeNote({...note, isUpdating: false}))\n}\n\nexport {\n  setNotes,\n  getNotes,\n  addNote,\n  createNote,\n  changeNote,\n  deleteNote,\n  removeNote,\n  patchNote,\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { createNote } from '../redux/actions/notesAction';\n\nfunction NoteForm() {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  const handlerSubmit = async (event) => {\n    event.preventDefault();\n    const text = event.target.text.value;\n    if(text.trim()) {\n      await dispatch(createNote(text, user._id));\n      event.target.text.value = '';\n    }\n  };\n\n  return (\n      <form className='noteForm' onSubmit={handlerSubmit}>\n          <h3>Note Form</h3>\n          <textarea type='text' className='noteInput' name='text' placeholder='Your Note text here' />\n          <button type='submit' className='addButton'>Add Note</button>\n      </form>\n  )\n}\n\nexport default NoteForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { patchNote, changeNote, deleteNote } from '../redux/actions/notesAction';\n\n\nfunction Note({ note }) {\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  const handlerUpdate = () => {\n    dispatch(changeNote({ ...note, isUpdating: !note.isUpdating }))\n  };\n\n  const handlerSave = async () => {\n    if (note.text.trim()) {\n      await dispatch(patchNote(note, user._id))\n    }\n  };\n\n  const onNoteChange = (input) => {\n    dispatch(changeNote({ ...note, text: input }))\n  }\n\n  const handlerDelete = () => {\n    dispatch(deleteNote(note, user._id))\n  };\n\n  return (\n    note.isUpdating ?\n      <div className='note'>\n        <textarea type='text' className='editInput' name='text' value={note.text} onChange={e => onNoteChange(e.target.value)} />\n        <div className='noteButtons'>\n          <button className='saveButton' onClick={handlerSave}>\n            <svg className='icon' enable-background='new 0 0 512.007 512.007' height='30px' viewBox='0 0 512.007 512.007' width='30px'>\n              <g>\n                <path d='m511.927 126.537c-.279-2.828-1.38-5.666-3.315-8.027-.747-.913 6.893 6.786-114.006-114.113-2.882-2.882-6.794-4.395-10.612-4.394-9.096 0-329.933 0-338.995 0-24.813 0-45 20.187-45 45v422c0 24.813 20.187 45 45 45h422c24.813 0 45-20.187 45-45 .001-364.186.041-339.316-.072-340.466zm-166.927-96.534v98c0 8.271-6.729 15-15 15h-19v-113zm-64 0v113h-139c-8.271 0-15-6.729-15-15v-98zm64 291h-218v-19c0-8.271 6.729-15 15-15h188c8.271 0 15 6.729 15 15zm-218 161v-131h218v131zm355-15c0 8.271-6.729 15-15 15h-92c0-19.555 0-157.708 0-180 0-24.813-20.187-45-45-45h-188c-24.813 0-45 20.187-45 45v180h-52c-8.271 0-15-6.729-15-15v-422c0-8.271 6.729-15 15-15h52v98c0 24.813 20.187 45 45 45h188c24.813 0 45-20.187 45-45v-98h2.787l104.213 104.214z' />\n              </g>\n            </svg>\n          </button>\n          <button className='deleteButton' onClick={handlerDelete}>\n            <svg className='icon' viewBox='0 0 512 512' width='30px' >\n              <g>\n                <path d='m424 64h-88v-16c0-26.467-21.533-48-48-48h-64c-26.467 0-48 21.533-48 48v16h-88c-22.056 0-40 17.944-40 40v56c0 8.836 7.164 16 16 16h8.744l13.823 290.283c1.221 25.636 22.281 45.717 47.945 45.717h242.976c25.665 0 46.725-20.081 47.945-45.717l13.823-290.283h8.744c8.836 0 16-7.164 16-16v-56c0-22.056-17.944-40-40-40zm-216-16c0-8.822 7.178-16 16-16h64c8.822 0 16 7.178 16 16v16h-96zm-128 56c0-4.411 3.589-8 8-8h336c4.411 0 8 3.589 8 8v40c-4.931 0-331.567 0-352 0zm313.469 360.761c-.407 8.545-7.427 15.239-15.981 15.239h-242.976c-8.555 0-15.575-6.694-15.981-15.239l-13.751-288.761h302.44z' />\n                <path d='m256 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z' /><path d='m336 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z' />\n                <path d='m176 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z' />\n              </g>\n            </svg>\n          </button>\n        </div>\n      </div>\n      :\n      <div className='note'>\n        {note.text}\n        <div className='noteButtons'>\n          <button className='editButton' onClick={handlerUpdate}>\n            <svg className='icon' viewBox='0 -1 401.52289 401' width='30px'>\n              <path d='m370.589844 250.972656c-5.523438 0-10 4.476563-10 10v88.789063c-.019532 16.5625-13.4375 29.984375-30 30h-280.589844c-16.5625-.015625-29.980469-13.4375-30-30v-260.589844c.019531-16.558594 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.519531-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.59375c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.792969c0-5.523437-4.476563-10-10-10zm0 0' />\n              <path d='m376.628906 13.441406c-17.574218-17.574218-46.066406-17.574218-63.640625 0l-178.40625 178.40625c-1.222656 1.222656-2.105469 2.738282-2.566406 4.402344l-23.460937 84.699219c-.964844 3.472656.015624 7.191406 2.5625 9.742187 2.550781 2.546875 6.269531 3.527344 9.742187 2.566406l84.699219-23.464843c1.664062-.460938 3.179687-1.34375 4.402344-2.566407l178.402343-178.410156c17.546875-17.585937 17.546875-46.054687 0-63.640625zm-220.257812 184.90625 146.011718-146.015625 47.089844 47.089844-146.015625 146.015625zm-9.40625 18.875 37.621094 37.625-52.039063 14.417969zm227.257812-142.546875-10.605468 10.605469-47.09375-47.09375 10.609374-10.605469c9.761719-9.761719 25.589844-9.761719 35.351563 0l11.738281 11.734375c9.746094 9.773438 9.746094 25.589844 0 35.359375zm0 0' />\n            </svg>\n          </button>\n          <button className='deleteButton' onClick={handlerDelete}>\n            <svg className='icon' viewBox='0 0 512 512' width='30px' >\n              <g>\n                <path d='m424 64h-88v-16c0-26.467-21.533-48-48-48h-64c-26.467 0-48 21.533-48 48v16h-88c-22.056 0-40 17.944-40 40v56c0 8.836 7.164 16 16 16h8.744l13.823 290.283c1.221 25.636 22.281 45.717 47.945 45.717h242.976c25.665 0 46.725-20.081 47.945-45.717l13.823-290.283h8.744c8.836 0 16-7.164 16-16v-56c0-22.056-17.944-40-40-40zm-216-16c0-8.822 7.178-16 16-16h64c8.822 0 16 7.178 16 16v16h-96zm-128 56c0-4.411 3.589-8 8-8h336c4.411 0 8 3.589 8 8v40c-4.931 0-331.567 0-352 0zm313.469 360.761c-.407 8.545-7.427 15.239-15.981 15.239h-242.976c-8.555 0-15.575-6.694-15.981-15.239l-13.751-288.761h302.44z' />\n                <path d='m256 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z' /><path d='m336 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z' />\n                <path d='m176 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z' />\n              </g>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n  )\n}\n\nexport default Note;\n","import Note from './Note';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getNotes } from '../redux/actions/notesAction';\n\nimport'../css/Notes.css'\n\nfunction NoteTable() {\n\n  const dispatch = useDispatch();\n\n  const notes = useSelector(state => state.notes);\n\n  useEffect(() => {\n    dispatch(getNotes())\n  }, [dispatch])\n\n\n  return (\n    <>\n        {\n          notes.length ? notes.map((note) =>\n          (\n            <Note\n              note={note}\n              key={note._id}\n            />\n          )) : \n          <p>\n            You have no Notes yet!<br/>To plan your new task just fill and submit Todo form. \n          </p>\n      }\n    </>\n  )\n}\n\nexport default NoteTable;\n","import { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkUserSession } from './redux/actions/userAction';\n\nimport { Ring } from 'react-awesome-spinners';\n\nimport './css/App.css'\n// components\nimport Home from './Components/Home';\nimport Navbar from './Components/Navbar';\nimport TodoList from './Components/TodoList';\nimport TodoForm from './Components/TodoForm';\nimport NoteForm from './Components/NoteForm';\nimport NoteTable from './Components/NoteTable';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkUserSession())\n  }, [dispatch])\n\n  const user = useSelector(state => state.user);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/'>\n          {!user ? <Home /> : <Redirect to='/todos' />}\n        </Route>\n\n        <Route exact path='/todos'>\n          {!user ? <Ring/> :\n            <>\n              <Navbar user={user} />\n              <div className='todosContainer'>\n                <div className='todos'>\n                  <TodoForm />\n                  <TodoList />\n                </div>\n              </div>\n            </>\n          }\n        </Route>\n\n        <Route exact path='/notes'>\n          {!user ? <Ring/> :\n            <>\n              <Navbar user={user} />\n              <div className='notesContainer'>\n                <div className='notes'>\n                  <NoteForm />\n                  <NoteTable />\n                </div>\n              </div>\n            </>\n          }\n        </Route>\n\n        <Redirect to='/' />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as TYPES from '../types/types';\n\nfunction userReducer(user = {}, action) {\n  switch (action.type) {\n    case TYPES.CHECK_USER_SESSION:\n      return action.data\n    case TYPES.VERIFY_USER:\n      return action.data\n    case TYPES.LOGOUT_USER:\n      return action.data\n    default:\n      return user;\n  }\n}\n\nexport default userReducer;\n","import * as TYPES from '../types/types';\n\nfunction todosReducer(todos = [], action) {\n  switch (action.type) {\n    case TYPES.SET_TODOS:\n      return action.data\n    case TYPES.ADD_TODO:\n      return [action.data, ...todos]\n    case TYPES.CHANGE_TODO:\n      return todos.map(todo => todo._id === action.data._id ? action.data : todo)\n    case TYPES.REMOVE_TODO:\n      return todos.filter(todo => todo._id !== action.data._id)\n    default:\n      return todos;\n  }\n}\n\nexport default todosReducer;\n","import * as TYPES from '../types/types';\n\nfunction notesReducer(notes = [], action) {\n  switch (action.type) {\n    case TYPES.SET_NOTES:\n      return action.data\n    case TYPES.ADD_NOTE:\n      return [action.data, ...notes]\n    case TYPES.CHANGE_NOTE:\n      return notes.map(note => note._id === action.data._id ? action.data : note)\n    case TYPES.REMOVE_NOTE:\n      return notes.filter(note => note._id !== action.data._id)\n    default:\n      return notes;\n  }\n}\n\nexport default notesReducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport todosReducer from './todosReducer';\nimport notesReducer from './notesReducer ';\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    todos: todosReducer,\n    notes: notesReducer,\n})\n\nexport default rootReducer;\n","const initState = {\n  user: null,\n  todos: [],\n  notes: [],\n}\n\nexport default initState;\n","import { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport initState from './initState';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, initState, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}